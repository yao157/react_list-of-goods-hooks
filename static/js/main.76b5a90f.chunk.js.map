{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","preparedGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","isResetVisible","className","type","classNames","onClick","currentState","map","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA9BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKd,EAASiB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,KAAKlB,EAASM,KACZ,OAAO,EACT,QACE,MAAM,IAAIa,MAAM,uBAIlBf,GACFO,EAAaS,UAGRT,EAOeU,CAAkBpB,EACtC,CAAEM,WAAUH,eACRkB,EAAiBf,IAAaP,EAASM,MAAQF,EAmBrD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASe,WAEtCW,QA1Be,WACrBlB,EAAYR,EAASe,WAmBjB,iCAWA,wBACES,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASiB,SAEtCS,QAjCa,WACnBlB,EAAYR,EAASiB,SA0BjB,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAxCQ,WACdrB,GAAc,SAAAsB,GAAY,OAAKA,MAiC3B,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA7CI,WACZrB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAUJ,6BACGG,EAAcmB,KAAI,SAAAlB,GAAK,OACtB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC/HjBmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.76b5a90f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      case SortType.NONE:\n        return 0;\n      default:\n        throw new Error('Wrong sort type');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const preparedGoods = getReorderedGoods(goodsFromServer,\n    { sortType, isReversed });\n  const isResetVisible = sortType !== SortType.NONE || isReversed;\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(currentState => !currentState);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(goods => (\n          <li\n            key={goods}\n            data-cy=\"Good\"\n          >\n            {goods}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}